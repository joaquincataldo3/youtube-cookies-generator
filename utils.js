import dotenv from 'dotenv';
import puppeteer from'puppeteer';
dotenv.config();

export const getYoutubeCookies = async () => {
    try {
        console.log('launching browser no sandbox...')
        const browser = await puppeteer.launch({
            headless: true,
            cacheDirectory: '/opt/render/.cache/puppeteer'
        });
        const page = await browser.newPage();
        console.log('signing in...')
        await page.goto('https://accounts.google.com/signin/v2/identifier');
        console.log('typing email...')
        await page.type('input[type="email"]', process.env.YOUTUBE_EMAIL);
        await page.screenshot({ path: './images/email.png' });
        console.log('enter....')
        await page.keyboard.press('Enter');
        await page.screenshot({ path: './images/enter.png' });
        console.log('waiting for network')
        page.waitForNavigation({ waitUntil: 'networkidle0', timeout: 30000 }) 
        console.log('waiting password...')
        await page.screenshot({ path: './images/waiting-pw.png' });
        await page.waitForSelector('input[type="password"]', { visible: true, timeout: 30000 });
        await page.screenshot({ path: './images/password.png' });
        console.log('got password...')
        await page.type('input[type="password"]', process.env.YOUTUBE_PASSWORD);
        await page.screenshot({ path: './images/screenshot4.png' });
        console.log('password next...')
        await page.click('#passwordNext');
        console.log('waiting for network...')
        await page.screenshot({ path: './images/screenshot5.png' });
        await page.waitForNavigation({ waitUntil: 'networkidle0' });
        console.log('successfully signed in...')
        console.log('redirecting to youtube...')
        await page.goto('https://www.youtube.com', { waitUntil: 'networkidle0' });
        console.log('obtaining cookies...')
        const youtubeCookies = await page.cookies();
        await browser.close();
        return youtubeCookies;
    } catch (error) {
       console.log('get youtube cookies error ' + error)
    }
   
}

export const formatCookiesToNetscapeFormat = (youtubeCookies) => {
    console.log('Formatting Netscape cookies file...');
    let cookieFileContent = `# Netscape HTTP Cookie File\n# This file is generated by yt-dlp. Do not edit.\n\n`;

    youtubeCookies.forEach(cookie => {
        const domain = cookie.domain.startsWith('.') ? cookie.domain : `.${cookie.domain}`;
        const includeSubdomains = cookie.domain.startsWith('.') ? 'TRUE' : 'FALSE';
        const secure = cookie.secure ? 'TRUE' : 'FALSE';

        const expires = cookie.expires > 0 ? Math.floor(cookie.expires) : -1;

        cookieFileContent += `${domain}\t${includeSubdomains}\t${cookie.path}\t${secure}\t${expires}\t${cookie.name}\t${cookie.value}\n`;
    });

    return cookieFileContent;
};
  